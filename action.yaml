name: 'Action Buf'
description: 'Runs buf commmands to lint and generate protos'
inputs:
  buf-user:
    description: 'Buf user'
    required: true
  buf-token:
    description: 'Buf token'
    required: true
  token:
    description: 'Git token to use'
    required: false
    default: ${{ github.token }}
  push-dir:
    description: 'Subdirectory to use with buf push'
    required: false
    default: '.'
  ref:
    description: 'Ref to checkout'
    required: false
    default: ${{ github.head_ref }}
  lint:
    description: 'Run `buf lint`'
    required: false
    default: 'true'
  generate:
    description: 'Run `buf generate`'
    required: false
    default: 'true'
  breaking:
    description: 'Run `buf breaking`'
    required: false
    default: 'true'
  mod-prune:
    description: 'Run `buf mod prune`'
    required: false
    default: 'true'
  mod-update:
    description: 'Run `buf mod update`'
    required: false
    default: 'true'
  push:
    description: 'Run `buf push`'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.token }}
        ref: ${{ inputs.ref }}
    - name: Configure git
      uses: fregante/setup-git-user@v1
    - name: Setup Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Setup buf
      uses: bufbuild/buf-setup-action@v0.6.0
      with:
        github_token: ${{ github.token }}
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ github.token }}
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Install Go dependencies
      shell: bash
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
    - name: Sign into BSR
      shell: bash
      run: |
        echo ${{ inputs.buf-token }} | buf registry login --username ${{ inputs.buf-user }} --token-stdin
    - name: Run buf lint
      if: inputs.lint == 'true'
      uses: bufbuild/buf-lint-action@v1
    - name: Run buf mod prune
      if: inputs.mod-prune == 'true'
      shell: bash
      run: |
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='mod prune'
    - name: Run buf mod update
      if: inputs.mod-update == 'true'
      shell: bash
      run: |
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='mod update'
    - name: Run buf generate
      if: inputs.generate == 'true'
      shell: bash
      run: |
        buf generate
    - name: Commit generated protos
      if: inputs.generate == 'true'
      uses: stefanzweifel/git-auto-commit-action@v4
    - name: Create BSR repo
      if: inputs.push == 'true'
      shell: bash
      run: |
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='beta registry repository create buf.build/${{ inputs.buf-user }}'
    - name: Run buf push
      if: inputs.push == 'true'
      uses: bufbuild/buf-push-action@v1
      with:
        buf_token: ${{ inputs.buf-token }}
        input: ${{ inputs.push-dir }}
    - name: Run buf breaking
      if: inputs.breaking == 'true'
      uses: bufbuild/buf-breaking-action@v1
      with:
        against: 'https://github.com/${GITHUB_REPOSITORY}.git#branch=main'