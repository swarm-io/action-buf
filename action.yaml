name: 'Action Buf'
description: 'Runs buf commmands to lint and generate protos'
inputs:
  buf-user:
    description: 'Buf user'
    required: true
  buf-token:
    description: 'Buf token'
    required: true
  token:
    description: 'Git token to use'
    required: false
    default: ${{ github.token }}
  ref:
    description: 'Ref to checkout'
    required: false
    default: ${{ github.ref }}
  breaking-ref:
    description: 'Ref to compare to if running `buf breaking`'
    required: false
    default: main
  lint:
    description: 'Run `buf lint`'
    required: false
    default: true
  generate:
    description: 'Run `buf generate`'
    required: false
    default: true
  breaking:
    description: 'Run `buf breaking`'
    required: false
    default: true
  mod-prune:
    description: 'Run `buf mod prune`'
    required: false
    default: true
  mod-update:
    description: 'Run `buf mod update`'
    required: false
    default: true
  push:
    description: 'Run `buf push`'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.token }}
        ref: ${{ inputs.ref }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.token }}
        ref: ${{ inputs.breakingRef }}
        path: against
    - name: Configure git
      uses: fregante/setup-git-user@v1
    - name: Setup Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Setup buf
      uses: bufbuild/buf-setup-action@v0.6.0
      with:
        github_token: ${{ github.token }}
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ github.token }}
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Install Go dependencies
      shell: bash
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
    - name: Login to BSR
      shell: bash
      run: |
        echo ${{ inputs.buf-token }} | buf registry login --username ${{ inputs.buf-user }} --token-stdin
    - name: Run buf lint
      if: inputs.lint
      shell: bash
      run: |
        buf lint
    - name: Run buf mod prune
      if: inputs.mod-prune
      shell: bash
      run: |
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='mod prune'
    - name: Run buf mod update
      if: inputs.mod-update
      shell: bash
      run: |
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='mod update'
    - name: Run buf generate
      if: inputs.generate
      shell: bash
      run: |
        buf generate
    - name: Commit generated protos
      if: inputs.generate
      uses: stefanzweifel/git-auto-commit-action@v4
    - name: Run buf push
      if: inputs.push
      shell: bash
      run: |
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='beta registry repository create buf.build/${{ inputs.buf-user }}'
        node ${{ github.action_path }}/buf.js --workingDirectory='${{ github.workspace }}' --bufCommand='push'
    - name: Run buf breaking
      if: inputs.breaking
      shell: bash
      run: |
        buf breaking --against ./against